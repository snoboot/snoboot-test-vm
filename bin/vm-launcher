#!/bin/sh
#
# Starts a VM with qemu
#

abspath() {
  dn=$(dirname "$1")
  bn=$(basename "$1")
  cd "$dn"
  dn=$(pwd)
  echo "$dn/$bn"
}

cmd=$(basename "$0")

IFS=$'\n'

[ -z "$VM_QEMU" ] && VM_QEMU="qemu-system-x86_64"

default_cpu=max
default_machine=
virtio_net_device=virtio-net-device

extraArgPre=()
case "$VM_QEMU" in
  qemu-system-aarch64)
    default_cpu="cortex-a57"
    default_machine=virt
    extraArgPre=(-nographic)
    ;;
  qemu-system-x86_64)
    default_cpu="kvm64"
    virtio_net_device=virtio-net-pci
    ;;
esac

if [ -z "$VM_ACCEL" ]; then
  # Select the best available hardware acceleration
  accelHelp=$("$VM_QEMU" -accel help)
  for mode in hvf kvm; do
    echo $accelHelp | grep -q -w "$mode"
    if [ $? -eq 0 ]; then
      accel=(-accel $mode)
      break
    fi
  done
else
  accel=(-accel "$VM_ACCEL")
fi

[ -z "$VM_CPU" ] && VM_CPU="$default_cpu"
cpu=(-cpu "$VM_CPU")

machine=()
[ -z "$VM_MACHINE" ] && VM_MACHINE="$default_machine"
[ -n "$VM_MACHINE" ] && machine=(-machine "$VM_MACHINE")

[ -z "$VM_RAM" ] && VM_RAM=2G
ram=(-m "$VM_RAM")

m=""
[ -n "$VM_MACHINE" ] && m="$VM_MACHINE "
echo "Emulating a $m$VM_CPU system with $VM_RAM RAM"

smp=()
[ -n "$VM_SMP" ] && smp=(-smp "$VM_SMP") && echo "Using SMP: $smp"

bios=()
if [ -n "$VM_BIOS" ]; then
  echo "Using BIOS image: $VM_BIOS"
  bios=(-bios "$VM_BIOS")
fi

# VM_HDA=""
hda=()
if [ -n "$VM_HDA" ]; then
  echo "Using hard-disk image: "$(abspath "$VM_HDA")
  hda=(-hda "$VM_HDA")
else
  echo "No harddisk image set"
fi

cdrom=()
if [ -n "$VM_ISO" ]; then
  echo "Using ISO cdrom image: "$(abspath "$VM_ISO")
  cdrom=(-cdrom "$VM_ISO")
else
  echo "No ISO cdom image set"
fi

[ -z "$VM_LOCAL_SSH_PORT" ] && VM_LOCAL_SSH_PORT=20022
net=(-device "$virtio_net_device",netdev=net0 -netdev user,id=net0,net=240.42.0.0/24,hostfwd=tcp::${VM_LOCAL_SSH_PORT}-:22)
echo "Forwarding local port $VM_LOCAL_SSH_PORT to VM's ssh server"

lsof -t -i "TCP:$VM_LOCAL_SSH_PORT" -s TCP:LISTEN >/dev/null && echo "\nError: Can't listen on port $VM_LOCAL_SSH_PORT (already taken).\nPlease specify a free port with VM_LOCAL_SSH_PORT=nnnn $cmd $@\n" >&2

set -x
exec "$VM_QEMU" ${extraArgPre[@]} ${accel[@]} ${cpu[@]} ${machine[@]} ${ram[@]} ${smp[@]} ${bios[@]} ${hda[@]} ${net[@]} ${cdrom[@]}
